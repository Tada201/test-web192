{
  "documents": [
    {
      "id": "welcome",
      "title": "Welcome to PRO192",
      "content": "Introduction to Object-Oriented Programming using Java course overview objectives learning outcomes academic policy prerequisite",
      "url": "/section/welcome",
      "category": "course",
      "tags": [
        "welcome",
        "introduction",
        "overview",
        "objectives",
        "policy"
      ],
      "difficulty": "Beginner",
      "description": "Course introduction and overview"
    },
    {
      "id": "introduction-course",
      "title": "Course Introduction",
      "content": "Object-oriented programming concepts complexity abstraction classes encapsulation inheritance polymorphism UML terminology",
      "url": "/section/introductionCourse",
      "category": "tutorial",
      "tags": [
        "oop",
        "concepts",
        "abstraction",
        "classes",
        "uml"
      ],
      "difficulty": "Beginner",
      "description": "Introduction to OOP concepts and terminology"
    },
    {
      "id": "foundations",
      "title": "Java Foundations",
      "content": "Java Virtual Machine JVM platform independence data types variables arrays operators logic constructs keywords identifiers",
      "url": "/section/foundations",
      "category": "tutorial",
      "tags": [
        "java",
        "jvm",
        "data-types",
        "variables",
        "arrays",
        "operators"
      ],
      "difficulty": "Beginner",
      "description": "Java basics and fundamental concepts"
    },
    {
      "id": "encapsulation",
      "title": "Encapsulation",
      "content": "Classes objects constructors member functions access modifiers private public protected getters setters this keyword package",
      "url": "/section/encapsulation",
      "category": "tutorial",
      "tags": [
        "encapsulation",
        "classes",
        "objects",
        "constructors",
        "access-modifiers"
      ],
      "difficulty": "Intermediate",
      "description": "Object-oriented encapsulation principles"
    },
    {
      "id": "inheritance",
      "title": "Inheritance",
      "content": "Inheritance extends super derived classes hierarchies is-a relationship polymorphism instanceof casting dynamic static type",
      "url": "/section/inheritance",
      "category": "tutorial",
      "tags": [
        "inheritance",
        "extends",
        "super",
        "polymorphism",
        "casting"
      ],
      "difficulty": "Intermediate",
      "description": "Inheritance and class hierarchies"
    },
    {
      "id": "polymorphism",
      "title": "Polymorphism",
      "content": "Method overloading overriding abstract classes interfaces dynamic binding static binding function signatures",
      "url": "/section/polymorphism",
      "category": "tutorial",
      "tags": [
        "polymorphism",
        "overloading",
        "overriding",
        "abstract",
        "interfaces"
      ],
      "difficulty": "Advanced",
      "description": "Polymorphism and method binding"
    },
    {
      "id": "array-objects",
      "title": "Array of Objects",
      "content": "Arrays objects collections management operations add search remove update sort file input output streams",
      "url": "/section/arrayofobjects",
      "category": "tutorial",
      "tags": [
        "arrays",
        "objects",
        "collections",
        "file-io",
        "streams"
      ],
      "difficulty": "Intermediate",
      "description": "Managing collections of objects"
    },
    {
      "id": "collections",
      "title": "Collections Framework",
      "content": "ArrayList TreeSet HashMap List Set Map abstract data types ADT java.util collections framework generics",
      "url": "/section/collection",
      "category": "tutorial",
      "tags": [
        "collections",
        "arraylist",
        "treeset",
        "hashmap",
        "generics"
      ],
      "difficulty": "Intermediate",
      "description": "Java Collections Framework"
    },
    {
      "id": "memory",
      "title": "Memory Management",
      "content": "Dynamic memory heap stack allocation deallocation garbage collection JVM memory management static",
      "url": "/section/dynamicmemory",
      "category": "tutorial",
      "tags": [
        "memory",
        "heap",
        "stack",
        "garbage-collection",
        "allocation"
      ],
      "difficulty": "Advanced",
      "description": "Java memory management"
    },
    {
      "id": "exceptions",
      "title": "Exception Handling",
      "content": "Exceptions try catch finally throw throws checked unchecked runtime exceptions error handling",
      "url": "/section/exception",
      "category": "tutorial",
      "tags": [
        "exceptions",
        "try-catch",
        "error-handling",
        "throws"
      ],
      "difficulty": "Intermediate",
      "description": "Java exception handling"
    },
    {
      "id": "file-io",
      "title": "File Input/Output",
      "content": "File IO streams input output Scanner System.in System.out command line reading writing files",
      "url": "/section/io",
      "category": "tutorial",
      "tags": [
        "file-io",
        "streams",
        "scanner",
        "input",
        "output"
      ],
      "difficulty": "Intermediate",
      "description": "File input and output operations"
    },
    {
      "id": "class-example",
      "title": "Java Class Example",
      "content": "public class Student private String name int age constructor getter setter methods encapsulation",
      "url": "/section/encapsulation",
      "category": "example",
      "tags": [
        "class",
        "constructor",
        "getter",
        "setter",
        "example"
      ],
      "difficulty": "Beginner",
      "description": "Basic Java class implementation"
    },
    {
      "id": "inheritance-example",
      "title": "Inheritance Example",
      "content": "class Dog extends Animal super constructor override methods inheritance hierarchy",
      "url": "/section/inheritance",
      "category": "example",
      "tags": [
        "inheritance",
        "extends",
        "super",
        "override",
        "example"
      ],
      "difficulty": "Intermediate",
      "description": "Inheritance implementation example"
    },
    {
      "id": "arraylist-example",
      "title": "ArrayList Example",
      "content": "ArrayList<String> list new ArrayList add get remove size collections framework",
      "url": "/section/collection",
      "category": "example",
      "tags": [
        "arraylist",
        "collections",
        "generics",
        "example"
      ],
      "difficulty": "Intermediate",
      "description": "ArrayList usage example"
    },
    {
      "id": "exception-example",
      "title": "Exception Handling Example",
      "content": "try catch finally block exception handling ArithmeticException NullPointerException",
      "url": "/section/exception",
      "category": "example",
      "tags": [
        "exception",
        "try-catch",
        "example"
      ],
      "difficulty": "Intermediate",
      "description": "Exception handling example"
    },
    {
      "id": "java-keywords",
      "title": "Java Keywords Reference",
      "content": "public private protected static final abstract interface extends implements class void int String boolean",
      "url": "/section/foundations",
      "category": "reference",
      "tags": [
        "keywords",
        "reference",
        "java",
        "syntax"
      ],
      "difficulty": "Beginner",
      "description": "Complete Java keywords reference"
    },
    {
      "id": "oop-principles",
      "title": "OOP Principles Reference",
      "content": "encapsulation inheritance polymorphism abstraction principles object-oriented programming concepts",
      "url": "/section/introductionCourse",
      "category": "reference",
      "tags": [
        "oop",
        "principles",
        "concepts",
        "reference"
      ],
      "difficulty": "Beginner",
      "description": "Object-oriented programming principles"
    },
    {
      "id": "collections-hierarchy",
      "title": "Collections Hierarchy",
      "content": "Collection List Set Map ArrayList LinkedList TreeSet HashSet HashMap TreeMap interface hierarchy",
      "url": "/section/collection",
      "category": "reference",
      "tags": [
        "collections",
        "hierarchy",
        "interfaces",
        "reference"
      ],
      "difficulty": "Intermediate",
      "description": "Java Collections Framework hierarchy"
    },
    {
      "id": "syllabus-download",
      "title": "Course Syllabus PDF",
      "content": "syllabus course outline schedule learning objectives grading structure materials prerequisites",
      "url": "https://drive.google.com/file/d/1F-MrzcO8qpKdOirw5AA0-ZzfHs6Su0XG/view",
      "category": "download",
      "tags": [
        "syllabus",
        "pdf",
        "download",
        "course"
      ],
      "difficulty": "Beginner",
      "description": "Complete course syllabus and information"
    },
    {
      "id": "java-cheat-sheet",
      "title": "Java Syntax Cheat Sheet",
      "content": "java syntax reference quick guide cheat sheet programming language basics",
      "url": "#",
      "category": "download",
      "tags": [
        "cheat-sheet",
        "syntax",
        "reference",
        "java"
      ],
      "difficulty": "Beginner",
      "description": "Quick reference for Java syntax"
    },
    {
      "id": "class-definition",
      "title": "How to Define a Class",
      "content": "class definition public class constructor fields methods attributes behavior state",
      "url": "/section/encapsulation",
      "category": "tutorial",
      "tags": [
        "class",
        "definition",
        "constructor",
        "methods"
      ],
      "difficulty": "Beginner",
      "description": "Learn how to define classes in Java"
    },
    {
      "id": "object-creation",
      "title": "Creating Objects",
      "content": "new keyword object instantiation constructor calling creating objects from classes",
      "url": "/section/encapsulation",
      "category": "tutorial",
      "tags": [
        "object",
        "new",
        "instantiation",
        "constructor"
      ],
      "difficulty": "Beginner",
      "description": "How to create objects in Java"
    },
    {
      "id": "method-overriding",
      "title": "Method Overriding",
      "content": "override annotation method overriding inheritance polymorphism runtime binding",
      "url": "/section/polymorphism",
      "category": "tutorial",
      "tags": [
        "override",
        "polymorphism",
        "inheritance",
        "methods"
      ],
      "difficulty": "Advanced",
      "description": "Understanding method overriding"
    }
  ],
  "metadata": {
    "version": "1.0.0",
    "buildDate": "2025-06-27T03:59:37.676Z",
    "totalDocuments": 23,
    "categories": [
      "course",
      "tutorial",
      "example",
      "reference",
      "download"
    ],
    "difficulties": [
      "Beginner",
      "Intermediate",
      "Advanced"
    ],
    "tags": [
      "welcome",
      "introduction",
      "overview",
      "objectives",
      "policy",
      "oop",
      "concepts",
      "abstraction",
      "classes",
      "uml",
      "java",
      "jvm",
      "data-types",
      "variables",
      "arrays",
      "operators",
      "encapsulation",
      "objects",
      "constructors",
      "access-modifiers",
      "inheritance",
      "extends",
      "super",
      "polymorphism",
      "casting",
      "overloading",
      "overriding",
      "abstract",
      "interfaces",
      "collections",
      "file-io",
      "streams",
      "arraylist",
      "treeset",
      "hashmap",
      "generics",
      "memory",
      "heap",
      "stack",
      "garbage-collection",
      "allocation",
      "exceptions",
      "try-catch",
      "error-handling",
      "throws",
      "scanner",
      "input",
      "output",
      "class",
      "constructor",
      "getter",
      "setter",
      "example",
      "override",
      "exception",
      "keywords",
      "reference",
      "syntax",
      "principles",
      "hierarchy",
      "syllabus",
      "pdf",
      "download",
      "course",
      "cheat-sheet",
      "definition",
      "methods",
      "object",
      "new",
      "instantiation"
    ]
  }
}